$sprity-emojione-sprites: (
  {{~#each layouts~}}
    {{~#each layout.items~}}
      "{{meta.name}}",
    {{~/each~}}
  {{~/each~}}
);

.emojione {
  display: inline-block;
  background-repeat: no-repeat;
  font-size: inherit;
  line-height: normal;
  text-indent: -9999em;
  vertical-align: middle;
}

@mixin sprity-emojione-position ($size) {
  // each with index
  @for $i from 1 through length($sprity-emojione-sprites) {
    $sprite: nth($sprity-emojione-sprites, $i);

    .emojione-#{$sprite} {
      background-position: 0 #{- ($i - 1) * $size};
    }
  }
}

@mixin sprity-emojione-media ($multiplier, $base: 96) {
  @media
  only screen and (-webkit-min-device-pixel-ratio: #{$multiplier}),
  only screen and (        min-device-pixel-ratio: #{$multiplier}),
  only screen and (                min-resolution: #{$multiplier * $base}dpi),
  only screen and (                min-resolution: #{$multiplier}dppx) {

    @content;

  }
}

@mixin sprity-emojione ($size-unitless, $path, $retina: ()) {
  $size-px: $size-unitless * 1px;

  .emojione {
    width:  $size-px;
    height: $size-px;

    background-image: url("#{$path}/sprite-#{$size-unitless}.png");
    background-size:  $size-px;

    @each $multiplier, $size-unitless in $retina {
      @include sprity-emojione-media($multiplier) {
        background-image: url("#{$path}/sprite-#{$size-unitless}.png");
      }
    }
  }

  @include sprity-emojione-position($size-px);
}
